//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dixit_Client.DixitService1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateGameResult", Namespace="http://schemas.datacontract.org/2004/07/Dixit_ServiceLibrary.Interfaces")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
    public partial class CreateGameResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object GameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Game {
            get {
                return this.GameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameField, value) != true)) {
                    this.GameField = value;
                    this.RaisePropertyChanged("Game");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JoinGameResult", Namespace="http://schemas.datacontract.org/2004/07/Dixit_ServiceLibrary.Interfaces")]
    [System.SerializableAttribute()]
    public partial class JoinGameResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectCardResult", Namespace="http://schemas.datacontract.org/2004/07/Dixit_ServiceLibrary.Interfaces")]
    [System.SerializableAttribute()]
    public partial class SelectCardResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DixitService1.IDixitService", CallbackContract=typeof(Dixit_Client.DixitService1.IDixitServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IDixitService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDixitService/Login", ReplyAction="http://tempuri.org/IDixitService/LoginResponse")]
        void Login();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDixitService/Login", ReplyAction="http://tempuri.org/IDixitService/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IDixitService/Logout", ReplyAction="http://tempuri.org/IDixitService/LogoutResponse")]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IDixitService/Logout", ReplyAction="http://tempuri.org/IDixitService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/ListGames", ReplyAction="http://tempuri.org/IDixitService/ListGamesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        System.Collections.Generic.List<object> ListGames();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/ListGames", ReplyAction="http://tempuri.org/IDixitService/ListGamesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<object>> ListGamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/CreateGame", ReplyAction="http://tempuri.org/IDixitService/CreateGameResponse")]
        Dixit_Client.DixitService1.CreateGameResult CreateGame(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/CreateGame", ReplyAction="http://tempuri.org/IDixitService/CreateGameResponse")]
        System.Threading.Tasks.Task<Dixit_Client.DixitService1.CreateGameResult> CreateGameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/JoinGame", ReplyAction="http://tempuri.org/IDixitService/JoinGameResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        Dixit_Client.DixitService1.JoinGameResult JoinGame(object game);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/JoinGame", ReplyAction="http://tempuri.org/IDixitService/JoinGameResponse")]
        System.Threading.Tasks.Task<Dixit_Client.DixitService1.JoinGameResult> JoinGameAsync(object game);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/LeaveGame", ReplyAction="http://tempuri.org/IDixitService/LeaveGameResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        void LeaveGame(object game);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/LeaveGame", ReplyAction="http://tempuri.org/IDixitService/LeaveGameResponse")]
        System.Threading.Tasks.Task LeaveGameAsync(object game);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/SelectCardWithStory", ReplyAction="http://tempuri.org/IDixitService/SelectCardWithStoryResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        Dixit_Client.DixitService1.SelectCardResult SelectCardWithStory(object game, object card, string story);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/SelectCardWithStory", ReplyAction="http://tempuri.org/IDixitService/SelectCardWithStoryResponse")]
        System.Threading.Tasks.Task<Dixit_Client.DixitService1.SelectCardResult> SelectCardWithStoryAsync(object game, object card, string story);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/SelectCard", ReplyAction="http://tempuri.org/IDixitService/SelectCardResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        Dixit_Client.DixitService1.SelectCardResult SelectCard(object game, object card);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IDixitService/SelectCard", ReplyAction="http://tempuri.org/IDixitService/SelectCardResponse")]
        System.Threading.Tasks.Task<Dixit_Client.DixitService1.SelectCardResult> SelectCardAsync(object game, object card);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDixitServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDixitService/GameStart")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        void GameStart(object state);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDixitService/GameStateChanged")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        void GameStateChanged(object state);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IDixitService/GameEnd")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.CreateGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.JoinGameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Dixit_Client.DixitService1.SelectCardResult))]
        void GameEnd(object state);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDixitServiceChannel : Dixit_Client.DixitService1.IDixitService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DixitServiceClient : System.ServiceModel.DuplexClientBase<Dixit_Client.DixitService1.IDixitService>, Dixit_Client.DixitService1.IDixitService {
        
        public DixitServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public DixitServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public DixitServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DixitServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public DixitServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Login() {
            base.Channel.Login();
        }
        
        public System.Threading.Tasks.Task LoginAsync() {
            return base.Channel.LoginAsync();
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public System.Collections.Generic.List<object> ListGames() {
            return base.Channel.ListGames();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<object>> ListGamesAsync() {
            return base.Channel.ListGamesAsync();
        }
        
        public Dixit_Client.DixitService1.CreateGameResult CreateGame(string name) {
            return base.Channel.CreateGame(name);
        }
        
        public System.Threading.Tasks.Task<Dixit_Client.DixitService1.CreateGameResult> CreateGameAsync(string name) {
            return base.Channel.CreateGameAsync(name);
        }
        
        public Dixit_Client.DixitService1.JoinGameResult JoinGame(object game) {
            return base.Channel.JoinGame(game);
        }
        
        public System.Threading.Tasks.Task<Dixit_Client.DixitService1.JoinGameResult> JoinGameAsync(object game) {
            return base.Channel.JoinGameAsync(game);
        }
        
        public void LeaveGame(object game) {
            base.Channel.LeaveGame(game);
        }
        
        public System.Threading.Tasks.Task LeaveGameAsync(object game) {
            return base.Channel.LeaveGameAsync(game);
        }
        
        public Dixit_Client.DixitService1.SelectCardResult SelectCardWithStory(object game, object card, string story) {
            return base.Channel.SelectCardWithStory(game, card, story);
        }
        
        public System.Threading.Tasks.Task<Dixit_Client.DixitService1.SelectCardResult> SelectCardWithStoryAsync(object game, object card, string story) {
            return base.Channel.SelectCardWithStoryAsync(game, card, story);
        }
        
        public Dixit_Client.DixitService1.SelectCardResult SelectCard(object game, object card) {
            return base.Channel.SelectCard(game, card);
        }
        
        public System.Threading.Tasks.Task<Dixit_Client.DixitService1.SelectCardResult> SelectCardAsync(object game, object card) {
            return base.Channel.SelectCardAsync(game, card);
        }
    }
}
